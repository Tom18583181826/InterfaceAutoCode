正则表达式的语法：
.       匹配一个任意字符
\d      匹配一个数字
\D      匹配一个非数字
\w      匹配一个可以组成单词的字符，在ASCII编码中仅匹配字母、数字、下划线
\W      与\w相反
\s      匹配一个空白字符
\S      匹配一个非空白字符
+       匹配一个或多个前面的字符
*       匹配零个或多个前面的字符
()      返回小括号里的符号匹配到的内容，往往小括号里面有边界，只返回边界之间的内容
[]      匹配中括号中的字符
{m}     匹配m个前面的字符
{m,n}   匹配m到n个前面的字符，默认是贪婪模式
{m,}    匹配至少m个前面的字符，默认是贪婪模式
？      非贪婪模式，做最短匹配
^       匹配字符串的开头
$       匹配字符串的结尾

re模块的常用函数与方法：
re.findall(pattern,string):根据正则表达式从左往右扫描字符串，把匹配到的内容按列表返回
re.search(pattern,string):根据正则表达式从左往右扫描字符串，如果匹配到就返回一个Match对象，如果没有就返回None
re.match(pattern,string):根据正则表达式去判断字符串的开头是否满足规则，如果满足就返回一个Match对象，如果不满足就返回None
re.fullmatch(pattern,string):根据正则表达式去判断整个字符串是否满足规则，如果满足就返回一个Match对象，如果不满足就返回None
re.compile(pattern):把正则表达式编译成一个正则表达式对象，好处是可以对常用的正则表达式一次编译多次调用，正则表达式对象具有如下方法：
                    findall(string):作用同re.findall
                    search(string):作用同re.search
                    match(string):作用同re.match
                    fullmatch(string):作用同re.fullmatch
                    split(string):作用同re.split
re.split(pattern,string):先根据正则表达式匹配字符串，再根据匹配到的内容分隔字符串，返回列表，
                         如果正则表达式中有小括号，那么小括号匹配到的内容也将返回到最终的列表中

Match对象的常用方法：
group(n):表示获取正则表达式中第n对括号匹配到的内容，如果不传参则返回整个正则表达式匹配到的内容，
         如果传入的参数n超过括号的索引就报IndexError异常
groups()：表示获取正则表达式中所有括号匹配到的内容，以元组返回
